syntax = "proto3";
package em.buyback.v1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/e-money/em-ledger/x/buyback/internal/types";

service Query {
  // Query for the current buyback balance
  rpc Balance(QueryBalanceRequest) returns (QueryBalanceResponse) {
    option (google.api.http).get = "/e-money/buyback/v1/balance";
  };

  // Query for buyback time periods
  rpc BuybackTime(QueryBuybackTimeRequest) returns (QueryBuybackTimeResponse) {
    option (google.api.http).get = "/e-money/buyback/v1/time";
  };

}

message QueryBalanceRequest {}

message QueryBalanceResponse {

  repeated cosmos.base.v1beta1.Coin balance = 1 [
    (gogoproto.moretags) = "yaml:\"balance\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
}

message QueryBuybackTimeRequest {}

message QueryBuybackTimeResponse {
  google.protobuf.Timestamp last_run = 1 [
    (gogoproto.customname) = "LastRunTime",
    (gogoproto.moretags) = "yaml:\"last_run\"",
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false
  ];

  google.protobuf.Timestamp next_run = 2 [
    (gogoproto.customname) = "NextRunTime",
    (gogoproto.moretags) = "yaml:\"next_run\"",
    (gogoproto.stdtime) = true,
    (gogoproto.nullable) = false
  ];
}

