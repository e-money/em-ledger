syntax = "proto3";
package em.liquidityprovider.v1;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/any.proto";

option go_package = "github.com/e-money/em-ledger/x/liquidityprovider/types";

message LiquidityProviderAccount {
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.equal) = false;

  // Any string address representation with the accompanying supporting encoding
  // and validation functions starting with bech32. However, in the
  // interest of cultivating wider acceptance for this module other arbitrary
  // address encodings outside the supported cosmos sdk formats perhaps would
  // fit nicely with this loosely defined provider identity specifier.
  string address = 1 [(gogoproto.moretags) = "yaml:\"address\""];

  repeated cosmos.base.v1beta1.Coin mintable = 2 [
    (gogoproto.moretags) = "yaml:\"mintable\"",
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
}
